// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto
// Protobuf C++ Version: 4.25.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_messages_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_messages_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_messages_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_messages_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_messages_2eproto;
namespace GRPCRailway {
class Empty;
struct EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class RailwayState;
struct RailwayStateDefaultTypeInternal;
extern RailwayStateDefaultTypeInternal _RailwayState_default_instance_;
class Train;
struct TrainDefaultTypeInternal;
extern TrainDefaultTypeInternal _Train_default_instance_;
class TrainArray;
struct TrainArrayDefaultTypeInternal;
extern TrainArrayDefaultTypeInternal _TrainArray_default_instance_;
class VirtualTrainTemplate;
struct VirtualTrainTemplateDefaultTypeInternal;
extern VirtualTrainTemplateDefaultTypeInternal _VirtualTrainTemplate_default_instance_;
}  // namespace GRPCRailway
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace GRPCRailway {
enum ETrainState : int {
  IN_TRIP = 0,
  IN_QUEUE = 1,
  ARRIVED = 2,
  DEPARTURED = 3,
  ETrainState_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ETrainState_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ETrainState_IsValid(int value);
extern const uint32_t ETrainState_internal_data_[];
constexpr ETrainState ETrainState_MIN = static_cast<ETrainState>(0);
constexpr ETrainState ETrainState_MAX = static_cast<ETrainState>(3);
constexpr int ETrainState_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
ETrainState_descriptor();
template <typename T>
const std::string& ETrainState_Name(T value) {
  static_assert(std::is_same<T, ETrainState>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ETrainState_Name().");
  return ETrainState_Name(static_cast<ETrainState>(value));
}
template <>
inline const std::string& ETrainState_Name(ETrainState value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ETrainState_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool ETrainState_Parse(absl::string_view name, ETrainState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETrainState>(
      ETrainState_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class VirtualTrainTemplate final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GRPCRailway.VirtualTrainTemplate) */ {
 public:
  inline VirtualTrainTemplate() : VirtualTrainTemplate(nullptr) {}
  ~VirtualTrainTemplate() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR VirtualTrainTemplate(::google::protobuf::internal::ConstantInitialized);

  inline VirtualTrainTemplate(const VirtualTrainTemplate& from)
      : VirtualTrainTemplate(nullptr, from) {}
  VirtualTrainTemplate(VirtualTrainTemplate&& from) noexcept
    : VirtualTrainTemplate() {
    *this = ::std::move(from);
  }

  inline VirtualTrainTemplate& operator=(const VirtualTrainTemplate& from) {
    CopyFrom(from);
    return *this;
  }
  inline VirtualTrainTemplate& operator=(VirtualTrainTemplate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VirtualTrainTemplate& default_instance() {
    return *internal_default_instance();
  }
  static inline const VirtualTrainTemplate* internal_default_instance() {
    return reinterpret_cast<const VirtualTrainTemplate*>(
               &_VirtualTrainTemplate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(VirtualTrainTemplate& a, VirtualTrainTemplate& b) {
    a.Swap(&b);
  }
  inline void Swap(VirtualTrainTemplate* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VirtualTrainTemplate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VirtualTrainTemplate* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VirtualTrainTemplate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VirtualTrainTemplate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const VirtualTrainTemplate& from) {
    VirtualTrainTemplate::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VirtualTrainTemplate* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "GRPCRailway.VirtualTrainTemplate";
  }
  protected:
  explicit VirtualTrainTemplate(::google::protobuf::Arena* arena);
  VirtualTrainTemplate(::google::protobuf::Arena* arena, const VirtualTrainTemplate& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNumFieldNumber = 1,
    kTimeIntervalMinFieldNumber = 2,
    kTimeIntervalMaxFieldNumber = 3,
    kTimeToStayFieldNumber = 4,
  };
  // uint32 num = 1;
  void clear_num() ;
  ::uint32_t num() const;
  void set_num(::uint32_t value);

  private:
  ::uint32_t _internal_num() const;
  void _internal_set_num(::uint32_t value);

  public:
  // uint32 time_interval_min = 2;
  void clear_time_interval_min() ;
  ::uint32_t time_interval_min() const;
  void set_time_interval_min(::uint32_t value);

  private:
  ::uint32_t _internal_time_interval_min() const;
  void _internal_set_time_interval_min(::uint32_t value);

  public:
  // uint32 time_interval_max = 3;
  void clear_time_interval_max() ;
  ::uint32_t time_interval_max() const;
  void set_time_interval_max(::uint32_t value);

  private:
  ::uint32_t _internal_time_interval_max() const;
  void _internal_set_time_interval_max(::uint32_t value);

  public:
  // uint32 time_to_stay = 4;
  void clear_time_to_stay() ;
  ::uint32_t time_to_stay() const;
  void set_time_to_stay(::uint32_t value);

  private:
  ::uint32_t _internal_time_to_stay() const;
  void _internal_set_time_to_stay(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:GRPCRailway.VirtualTrainTemplate)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t num_;
    ::uint32_t time_interval_min_;
    ::uint32_t time_interval_max_;
    ::uint32_t time_to_stay_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messages_2eproto;
};// -------------------------------------------------------------------

class Train final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GRPCRailway.Train) */ {
 public:
  inline Train() : Train(nullptr) {}
  ~Train() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Train(::google::protobuf::internal::ConstantInitialized);

  inline Train(const Train& from)
      : Train(nullptr, from) {}
  Train(Train&& from) noexcept
    : Train() {
    *this = ::std::move(from);
  }

  inline Train& operator=(const Train& from) {
    CopyFrom(from);
    return *this;
  }
  inline Train& operator=(Train&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Train& default_instance() {
    return *internal_default_instance();
  }
  static inline const Train* internal_default_instance() {
    return reinterpret_cast<const Train*>(
               &_Train_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Train& a, Train& b) {
    a.Swap(&b);
  }
  inline void Swap(Train* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Train* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Train* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Train>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Train& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Train& from) {
    Train::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Train* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "GRPCRailway.Train";
  }
  protected:
  explicit Train(::google::protobuf::Arena* arena);
  Train(::google::protobuf::Arena* arena, const Train& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kIdFieldNumber = 1,
    kWagonsFieldNumber = 3,
    kTrainStateFieldNumber = 4,
  };
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // uint32 id = 1;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // uint32 wagons = 3;
  void clear_wagons() ;
  ::uint32_t wagons() const;
  void set_wagons(::uint32_t value);

  private:
  ::uint32_t _internal_wagons() const;
  void _internal_set_wagons(::uint32_t value);

  public:
  // .GRPCRailway.ETrainState train_state = 4;
  void clear_train_state() ;
  ::GRPCRailway::ETrainState train_state() const;
  void set_train_state(::GRPCRailway::ETrainState value);

  private:
  ::GRPCRailway::ETrainState _internal_train_state() const;
  void _internal_set_train_state(::GRPCRailway::ETrainState value);

  public:
  // @@protoc_insertion_point(class_scope:GRPCRailway.Train)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      30, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::uint32_t id_;
    ::uint32_t wagons_;
    int train_state_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messages_2eproto;
};// -------------------------------------------------------------------

class Empty final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:GRPCRailway.Empty) */ {
 public:
  inline Empty() : Empty(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Empty(::google::protobuf::internal::ConstantInitialized);

  inline Empty(const Empty& from)
      : Empty(nullptr, from) {}
  Empty(Empty&& from) noexcept
    : Empty() {
    *this = ::std::move(from);
  }

  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }
  inline Empty& operator=(Empty&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Empty& default_instance() {
    return *internal_default_instance();
  }
  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
               &_Empty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Empty& a, Empty& b) {
    a.Swap(&b);
  }
  inline void Swap(Empty* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Empty* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Empty* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Empty>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Empty& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Empty& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "GRPCRailway.Empty";
  }
  protected:
  explicit Empty(::google::protobuf::Arena* arena);
  Empty(::google::protobuf::Arena* arena, const Empty& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GRPCRailway.Empty)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_messages_2eproto;
};// -------------------------------------------------------------------

class TrainArray final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GRPCRailway.TrainArray) */ {
 public:
  inline TrainArray() : TrainArray(nullptr) {}
  ~TrainArray() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TrainArray(::google::protobuf::internal::ConstantInitialized);

  inline TrainArray(const TrainArray& from)
      : TrainArray(nullptr, from) {}
  TrainArray(TrainArray&& from) noexcept
    : TrainArray() {
    *this = ::std::move(from);
  }

  inline TrainArray& operator=(const TrainArray& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainArray& operator=(TrainArray&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrainArray& default_instance() {
    return *internal_default_instance();
  }
  static inline const TrainArray* internal_default_instance() {
    return reinterpret_cast<const TrainArray*>(
               &_TrainArray_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(TrainArray& a, TrainArray& b) {
    a.Swap(&b);
  }
  inline void Swap(TrainArray* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainArray* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrainArray* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TrainArray>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrainArray& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TrainArray& from) {
    TrainArray::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TrainArray* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "GRPCRailway.TrainArray";
  }
  protected:
  explicit TrainArray(::google::protobuf::Arena* arena);
  TrainArray(::google::protobuf::Arena* arena, const TrainArray& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrainArrayFieldNumber = 1,
  };
  // repeated .GRPCRailway.Train train_array = 1;
  int train_array_size() const;
  private:
  int _internal_train_array_size() const;

  public:
  void clear_train_array() ;
  ::GRPCRailway::Train* mutable_train_array(int index);
  ::google::protobuf::RepeatedPtrField< ::GRPCRailway::Train >*
      mutable_train_array();
  private:
  const ::google::protobuf::RepeatedPtrField<::GRPCRailway::Train>& _internal_train_array() const;
  ::google::protobuf::RepeatedPtrField<::GRPCRailway::Train>* _internal_mutable_train_array();
  public:
  const ::GRPCRailway::Train& train_array(int index) const;
  ::GRPCRailway::Train* add_train_array();
  const ::google::protobuf::RepeatedPtrField< ::GRPCRailway::Train >&
      train_array() const;
  // @@protoc_insertion_point(class_scope:GRPCRailway.TrainArray)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::GRPCRailway::Train > train_array_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messages_2eproto;
};// -------------------------------------------------------------------

class RailwayState final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GRPCRailway.RailwayState) */ {
 public:
  inline RailwayState() : RailwayState(nullptr) {}
  ~RailwayState() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RailwayState(::google::protobuf::internal::ConstantInitialized);

  inline RailwayState(const RailwayState& from)
      : RailwayState(nullptr, from) {}
  RailwayState(RailwayState&& from) noexcept
    : RailwayState() {
    *this = ::std::move(from);
  }

  inline RailwayState& operator=(const RailwayState& from) {
    CopyFrom(from);
    return *this;
  }
  inline RailwayState& operator=(RailwayState&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RailwayState& default_instance() {
    return *internal_default_instance();
  }
  static inline const RailwayState* internal_default_instance() {
    return reinterpret_cast<const RailwayState*>(
               &_RailwayState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(RailwayState& a, RailwayState& b) {
    a.Swap(&b);
  }
  inline void Swap(RailwayState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RailwayState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RailwayState* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RailwayState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RailwayState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RailwayState& from) {
    RailwayState::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RailwayState* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "GRPCRailway.RailwayState";
  }
  protected:
  explicit RailwayState(::google::protobuf::Arena* arena);
  RailwayState(::google::protobuf::Arena* arena, const RailwayState& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrainsFieldNumber = 2,
    kRailNumFieldNumber = 1,
  };
  // repeated .GRPCRailway.Train trains = 2;
  int trains_size() const;
  private:
  int _internal_trains_size() const;

  public:
  void clear_trains() ;
  ::GRPCRailway::Train* mutable_trains(int index);
  ::google::protobuf::RepeatedPtrField< ::GRPCRailway::Train >*
      mutable_trains();
  private:
  const ::google::protobuf::RepeatedPtrField<::GRPCRailway::Train>& _internal_trains() const;
  ::google::protobuf::RepeatedPtrField<::GRPCRailway::Train>* _internal_mutable_trains();
  public:
  const ::GRPCRailway::Train& trains(int index) const;
  ::GRPCRailway::Train* add_trains();
  const ::google::protobuf::RepeatedPtrField< ::GRPCRailway::Train >&
      trains() const;
  // uint32 rail_num = 1;
  void clear_rail_num() ;
  ::uint32_t rail_num() const;
  void set_rail_num(::uint32_t value);

  private:
  ::uint32_t _internal_rail_num() const;
  void _internal_set_rail_num(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:GRPCRailway.RailwayState)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::GRPCRailway::Train > trains_;
    ::uint32_t rail_num_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_messages_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// VirtualTrainTemplate

// uint32 num = 1;
inline void VirtualTrainTemplate::clear_num() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.num_ = 0u;
}
inline ::uint32_t VirtualTrainTemplate::num() const {
  // @@protoc_insertion_point(field_get:GRPCRailway.VirtualTrainTemplate.num)
  return _internal_num();
}
inline void VirtualTrainTemplate::set_num(::uint32_t value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:GRPCRailway.VirtualTrainTemplate.num)
}
inline ::uint32_t VirtualTrainTemplate::_internal_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.num_;
}
inline void VirtualTrainTemplate::_internal_set_num(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.num_ = value;
}

// uint32 time_interval_min = 2;
inline void VirtualTrainTemplate::clear_time_interval_min() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_interval_min_ = 0u;
}
inline ::uint32_t VirtualTrainTemplate::time_interval_min() const {
  // @@protoc_insertion_point(field_get:GRPCRailway.VirtualTrainTemplate.time_interval_min)
  return _internal_time_interval_min();
}
inline void VirtualTrainTemplate::set_time_interval_min(::uint32_t value) {
  _internal_set_time_interval_min(value);
  // @@protoc_insertion_point(field_set:GRPCRailway.VirtualTrainTemplate.time_interval_min)
}
inline ::uint32_t VirtualTrainTemplate::_internal_time_interval_min() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.time_interval_min_;
}
inline void VirtualTrainTemplate::_internal_set_time_interval_min(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.time_interval_min_ = value;
}

// uint32 time_interval_max = 3;
inline void VirtualTrainTemplate::clear_time_interval_max() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_interval_max_ = 0u;
}
inline ::uint32_t VirtualTrainTemplate::time_interval_max() const {
  // @@protoc_insertion_point(field_get:GRPCRailway.VirtualTrainTemplate.time_interval_max)
  return _internal_time_interval_max();
}
inline void VirtualTrainTemplate::set_time_interval_max(::uint32_t value) {
  _internal_set_time_interval_max(value);
  // @@protoc_insertion_point(field_set:GRPCRailway.VirtualTrainTemplate.time_interval_max)
}
inline ::uint32_t VirtualTrainTemplate::_internal_time_interval_max() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.time_interval_max_;
}
inline void VirtualTrainTemplate::_internal_set_time_interval_max(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.time_interval_max_ = value;
}

// uint32 time_to_stay = 4;
inline void VirtualTrainTemplate::clear_time_to_stay() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.time_to_stay_ = 0u;
}
inline ::uint32_t VirtualTrainTemplate::time_to_stay() const {
  // @@protoc_insertion_point(field_get:GRPCRailway.VirtualTrainTemplate.time_to_stay)
  return _internal_time_to_stay();
}
inline void VirtualTrainTemplate::set_time_to_stay(::uint32_t value) {
  _internal_set_time_to_stay(value);
  // @@protoc_insertion_point(field_set:GRPCRailway.VirtualTrainTemplate.time_to_stay)
}
inline ::uint32_t VirtualTrainTemplate::_internal_time_to_stay() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.time_to_stay_;
}
inline void VirtualTrainTemplate::_internal_set_time_to_stay(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.time_to_stay_ = value;
}

// -------------------------------------------------------------------

// TrainArray

// repeated .GRPCRailway.Train train_array = 1;
inline int TrainArray::_internal_train_array_size() const {
  return _internal_train_array().size();
}
inline int TrainArray::train_array_size() const {
  return _internal_train_array_size();
}
inline void TrainArray::clear_train_array() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.train_array_.Clear();
}
inline ::GRPCRailway::Train* TrainArray::mutable_train_array(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:GRPCRailway.TrainArray.train_array)
  return _internal_mutable_train_array()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::GRPCRailway::Train>* TrainArray::mutable_train_array()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:GRPCRailway.TrainArray.train_array)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_train_array();
}
inline const ::GRPCRailway::Train& TrainArray::train_array(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GRPCRailway.TrainArray.train_array)
  return _internal_train_array().Get(index);
}
inline ::GRPCRailway::Train* TrainArray::add_train_array() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::GRPCRailway::Train* _add = _internal_mutable_train_array()->Add();
  // @@protoc_insertion_point(field_add:GRPCRailway.TrainArray.train_array)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::GRPCRailway::Train>& TrainArray::train_array() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:GRPCRailway.TrainArray.train_array)
  return _internal_train_array();
}
inline const ::google::protobuf::RepeatedPtrField<::GRPCRailway::Train>&
TrainArray::_internal_train_array() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.train_array_;
}
inline ::google::protobuf::RepeatedPtrField<::GRPCRailway::Train>*
TrainArray::_internal_mutable_train_array() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.train_array_;
}

// -------------------------------------------------------------------

// Train

// uint32 id = 1;
inline void Train::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = 0u;
}
inline ::uint32_t Train::id() const {
  // @@protoc_insertion_point(field_get:GRPCRailway.Train.id)
  return _internal_id();
}
inline void Train::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:GRPCRailway.Train.id)
}
inline ::uint32_t Train::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void Train::_internal_set_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string name = 2;
inline void Train::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Train::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GRPCRailway.Train.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Train::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:GRPCRailway.Train.name)
}
inline std::string* Train::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:GRPCRailway.Train.name)
  return _s;
}
inline const std::string& Train::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void Train::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Train::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Train::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:GRPCRailway.Train.name)
  return _impl_.name_.Release();
}
inline void Train::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:GRPCRailway.Train.name)
}

// uint32 wagons = 3;
inline void Train::clear_wagons() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.wagons_ = 0u;
}
inline ::uint32_t Train::wagons() const {
  // @@protoc_insertion_point(field_get:GRPCRailway.Train.wagons)
  return _internal_wagons();
}
inline void Train::set_wagons(::uint32_t value) {
  _internal_set_wagons(value);
  // @@protoc_insertion_point(field_set:GRPCRailway.Train.wagons)
}
inline ::uint32_t Train::_internal_wagons() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.wagons_;
}
inline void Train::_internal_set_wagons(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.wagons_ = value;
}

// .GRPCRailway.ETrainState train_state = 4;
inline void Train::clear_train_state() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.train_state_ = 0;
}
inline ::GRPCRailway::ETrainState Train::train_state() const {
  // @@protoc_insertion_point(field_get:GRPCRailway.Train.train_state)
  return _internal_train_state();
}
inline void Train::set_train_state(::GRPCRailway::ETrainState value) {
  _internal_set_train_state(value);
  // @@protoc_insertion_point(field_set:GRPCRailway.Train.train_state)
}
inline ::GRPCRailway::ETrainState Train::_internal_train_state() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::GRPCRailway::ETrainState>(_impl_.train_state_);
}
inline void Train::_internal_set_train_state(::GRPCRailway::ETrainState value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.train_state_ = value;
}

// -------------------------------------------------------------------

// RailwayState

// uint32 rail_num = 1;
inline void RailwayState::clear_rail_num() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rail_num_ = 0u;
}
inline ::uint32_t RailwayState::rail_num() const {
  // @@protoc_insertion_point(field_get:GRPCRailway.RailwayState.rail_num)
  return _internal_rail_num();
}
inline void RailwayState::set_rail_num(::uint32_t value) {
  _internal_set_rail_num(value);
  // @@protoc_insertion_point(field_set:GRPCRailway.RailwayState.rail_num)
}
inline ::uint32_t RailwayState::_internal_rail_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rail_num_;
}
inline void RailwayState::_internal_set_rail_num(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rail_num_ = value;
}

// repeated .GRPCRailway.Train trains = 2;
inline int RailwayState::_internal_trains_size() const {
  return _internal_trains().size();
}
inline int RailwayState::trains_size() const {
  return _internal_trains_size();
}
inline void RailwayState::clear_trains() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.trains_.Clear();
}
inline ::GRPCRailway::Train* RailwayState::mutable_trains(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:GRPCRailway.RailwayState.trains)
  return _internal_mutable_trains()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::GRPCRailway::Train>* RailwayState::mutable_trains()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:GRPCRailway.RailwayState.trains)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_trains();
}
inline const ::GRPCRailway::Train& RailwayState::trains(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:GRPCRailway.RailwayState.trains)
  return _internal_trains().Get(index);
}
inline ::GRPCRailway::Train* RailwayState::add_trains() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::GRPCRailway::Train* _add = _internal_mutable_trains()->Add();
  // @@protoc_insertion_point(field_add:GRPCRailway.RailwayState.trains)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::GRPCRailway::Train>& RailwayState::trains() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:GRPCRailway.RailwayState.trains)
  return _internal_trains();
}
inline const ::google::protobuf::RepeatedPtrField<::GRPCRailway::Train>&
RailwayState::_internal_trains() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.trains_;
}
inline ::google::protobuf::RepeatedPtrField<::GRPCRailway::Train>*
RailwayState::_internal_mutable_trains() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.trains_;
}

// -------------------------------------------------------------------

// Empty

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace GRPCRailway


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::GRPCRailway::ETrainState> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::GRPCRailway::ETrainState>() {
  return ::GRPCRailway::ETrainState_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_messages_2eproto_2epb_2eh
